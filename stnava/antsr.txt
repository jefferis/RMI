\documentclass{beamer}
\usetheme{Stats}
\setbeamercovered{transparent}
\usepackage{color}
\usepackage{url}
\usepackage{graphics}
\usepackage{tikz}
\usepackage{booktabs}
\usepackage{inconsolata}
\usepackage{xcolor}
\usepackage[T1]{fontenc}
\usepackage{alltt}
\usepackage{url}
\usepackage{breakurl}
\newenvironment<>{problock}[1]{%
  \begin{actionenv}#2%
      \def\insertblocktitle{#1}%
      \par%
      \mode<presentation>{%
        \setbeamercolor{block title}{fg=white,bg=black}
       \setbeamercolor{block body}{fg=black,bg=red}
       \setbeamercolor{itemize item}{fg=orange!20!black}
       \setbeamertemplate{itemize item}[triangle]
     }%
      \usebeamertemplate{block begin}}
    {\par\usebeamertemplate{block end}\end{actionenv}}
% \usepackage{listings}
% \lstset{breaklines=true,showstringspaces=false}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
% \usetheme{Szeged}
% \usecolortheme{beaver}
% \usetheme{Goettingen}
% \usecolortheme{rose}
\newcommand{\R}{\emph{R}~}
\newcommand{\knitr}{\emph{knitr}~}
\newcommand{\antsr}{\emph{ANTsR}~}
\usepackage{hyperref}
  \hypersetup{
  	colorlinks=true
		linkcolor=blue
		}

% render_listings()
<<setup, include=FALSE>>=
booleval<-FALSE
library(knitr)
options(width=50)
opts_chunk$set(fig.path='figure/antsr-',fig.align='center',fig.show='hold',size='footnotesize')
knit_theme$set(  knit_theme$get("seashell")  )
getPckg <- function(pckg) install.packages(pckg, repos = "http://cran.r-project.org")
library( ANTsR )
library( oro.nifti )
library( visreg )
library( ggplot2 )
library( boot )
library( candisc )
library( pheatmap ) 
myregion<-"CentralSulcus"
@

\title[R in Medical Imaging]{Medical Image Analysis with R}

\author{\textbf{Brian B. Avants}}
\institute[PENN]
{
\textcolor{blue}{PENN Image Computing \& Science Laboratory}\newline
\textcolor{purple}{Dept. of Radiology,
University of Pennsylvania}\newline
Philadelphia, PA, 19104 
\thanks{Thank you for participating!}
}


\begin{document}

\begin{frame}
\titlepage
\end{frame}

\section[Outline]{}
\frame{\tableofcontents}

\section{}
\frame{
	\frametitle{}

}

{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\center
Many Thanks for Contributions from:\newline \newline


{\bf Brandon Whitcher, Ph.D.}

Pfizer  

Cambridge, MA, USA

\begin{center}
\includegraphics[width=2.5in]{./figure/brandon.jpg}
\end{center}
\end{frame}
}


{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\center
\begin{center}
This presentation is copyrighted by\\
The \textbf{ANTs software consortium}\\
\bigskip
distributed under the\\
\textbf{Creative Commons by Attribution License 3.0}\\
\url{http://creativecommons.org/licenses/by/3.0}\\
\end{center}
\end{frame}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
How much \R experience in the room?
\center
\begin{center}
\includegraphics[width=4.5in]{./figure/simplehints.jpg}
\end{center}
\end{frame}
}



\section{Schedule}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Schedule}
\begin{itemize}[<+->]
\item Introduction
\item Basic Examples 
\item 1/2 Hour Break
\item Longitudinal Analysis and Model Selection (P. Thomas Fletcher)
\item Wrap-up / discussion
\end{itemize}
\end{frame}


\section{Intro}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Tutorial Goals}
\begin{itemize}[<+->]
\item Learn about \R in general (operations, dataframes, models)
\item Understand basics of \R image-based statistics (I/O, accessing
values, structure, function)
\item Practice some example reproducible studies ... 
\item Identify opportunities for innovation/future work
\item A good source on data analysis with \R examples:\newline
\href{http://www.stat.cmu.edu/~cshalizi/uADA/12/lectures/ADAfaEPoV.pdf}{\textcolor{blue}{"Advanced
Data Analysis from an Elementary Point of View" here}}.
\end{itemize}
\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R is Relevant to Your Success}
We entered a competition with R in our holster.
\begin{center}
\includegraphics[width=7in]{./figure/nick_brats.png}
\end{center}
\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\center{\large\noindent{\em \textcolor{blue}{The first 3 rules of statistics: 'Draw a picture, Draw a picture, Draw a picture.'}---Michael Starbird.}  }
\end{frame}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R in medical imaging?}
Search "r-project.org $+$ medical $+$ imaging"
% http://scholar.google.com/scholar?q=r-project.org+%22medical+imaging%22&hl=en&as_sdt=1%2C39&as_ylo=2010&as_yhi=2010
<<out.width='.4\\linewidth',dev='pdf'>>= 
dd<-read.csv('data/RMI.csv')
mdl<-lm( NPublications ~ Year +I(Year^2), data = dd)
visreg(mdl,main='Total Publications In Year X')
@
R contains virtually all popular statistical and machine learning algorithms, including Boosting, the LASSO, and random
forests, often contributed by the inventors.
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Why use \R in medical imaging?}
\begin{itemize}[<+->]
\item It's free --- not "free" like Matlab/SPM but really free

\begin{itemize}
\item It is the {\em de facto} standard for statistical computing
\item a New York Times article from 2009 estimated
that there are at least 250,000 active R users
\end{itemize}
\item Why not use Python?

\begin{enumerate}
\item IMHO, \R is easier to compile/maintain/install 
\item Visualization in \R is as good or better than Python 
\item Most importantly---{\em statisticians contribute directly to \R}
\item Because of this, many Python users rely on \R
\end{enumerate}
\item \R facilitates reproducible research: 
\begin{enumerate}
\item
\href{http://cran.r-project.org/web/views/ReproducibleResearch.html}{\textcolor{blue}{CRAN
 Task View (link)}}
\item
\href{http://biostatistics.oxfordjournals.org/content/10/3/405.long}{\textcolor{blue}{{\em
Biostatistics (link)}}}
\item \href{http://www.jstatsoft.org/}{\textcolor{blue}{{\em jstatsoft.org}}}
\end{enumerate}
\item \R assists reproducible medical image analysis but it's still
effortful to do it correctly.  See
\href{http://www.frontiersin.org/Journal/10.3389/fnins.2013.00162/full}{\textcolor{blue}{our
comments in Frontiers.}}
\end{itemize}
\end{frame}


\section{SetUp}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Set up for Medical Image Analysis} 
Let's assume you downloaded the latest 3.x version of \R from CRAN.

We now open \R and install MIA-relevant packages.

<<echo=FALSE,results='hide'>>=
# some setup
options(width=60)  # make the printing fit on the page
set.seed(1121)   # make the results repeatable
library( ANTsR )
library( oro.nifti )
@

<<>>= 
pkgnames <- c( "visreg" , "boot" , "rgl" , "knitr" , "ggplot2"
,"oro.nifti" , "candisc" , "pheatmap" )
k<-length( pkgnames )
@

Next actually install the packages.

<<eval=FALSE>>= 
install.packages( pkgnames )
@

We installed \Sexpr{k[1]} packages. ( knitr lets us 
use \texttt{ \textbackslash{}Sexpr\{\}} to refer to \R variables in \LaTeX{}.)
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%% don't eval below if you want to just compile %%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Install \antsr}
\begin{block}{ANTs $+$ \R}
\begin{itemize}
\item Operating System:  Linux, OSX
\item See:
\href{http://stnava.github.io/ANTsR/ANTsRGettingStarted.html}{\textcolor{blue}{Install
ANTsR (link)}}
\item Will install $\star$everything$\star$ you need if you want it to,
including R .... otherwise will just intall \antsr dependencies/utils.
\begin{problock}{{\em OSX NOTES }}
\item Requires: \href{https://developer.apple.com/xcode/}{\textcolor{blue}{Xcode (link)}} and
  its command line tools (google install instructions)
\item Requires:  a clean Homebrew ( "brew doctor" does not
complain )
\item you may want to comment out lines like: brew install ...X... if you already have software X around. 
\end{problock}
\end{itemize}
\end{block}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{What is \knitr?}
\begin{itemize}[<+->]
\item Yihui Xie's system
\href{http://yihui.name/knitr/}{\textcolor{blue}{\knitr}} for making
documents that compute

\item \knitr lets you write a document that employs \R directly 

\item \R evaluates code when the document is compiled 

\item The user controls when this does / does not happen ... 

\item Creates, figures, statistics etc that are embedded in rst, html,
latex, pretty much any common document format is doable.
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Simple knitr Example}

Use knitr to make a couple of plots in our code "chunk":

<<boring-plots-data,echo=FALSE,results='hide',dev='jpeg'>>=
# par(las=1,mar=c(4,4,.1,.1))  # tick labels direction
@

<<boring-plots,fig.width=4,fig.height=4,out.width='.45\\linewidth',dev='pdf'>>=
x <- rnorm( 20 )  
boxplot( x ) 
hist( x , main='', col="blue", probability = TRUE ) 
lines( density( x ), col = "red" )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R $\star$Very$\star$ Basics}
\R organizes data with dataframes, vectors, matrices and arrays (matrices with $\ge$
3 dimensions).

These can contain missing variables - but you must be careful about type!
<<out.width='.4\\linewidth',dev='jpeg'>>= 
as.numeric( as.character( c("0.5",0.1,0.6,"A") ) )
@
A data frame is used for storing data tables. It is a list of vectors
of equal length.

\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R $\star$Very$\star$ Basics 2}
{\em mtcars} is a built-in \R dataframe \newline \newline
<<out.width='.4\\linewidth',dev='jpeg',results='show',eval=TRUE,echo=TRUE>>= 
mtcars[c(1,13,28),1:6]
@
We analyze the relationship between MPG and other variables.

<<out.width='.4\\linewidth',dev='jpeg',results='hide'>>= 
myform<-paste( colnames( mtcars )[2:ncol(mtcars)] , collapse='+'  )
myform<-as.formula( paste( "mpg~", myform ) )
mdl <- lm(  myform , data = mtcars ) 
mdla<-stepAIC( mdl , direction =  c("both" ) )
@

\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R $\star$Very$\star$ Basics 3}
<<out.width='.4\\linewidth',dev='jpeg',eval=TRUE,results='show',echo=FALSE>>= 
print( summary( lm(  mdla$call$formula , data = mtcars ) ) )
@
Vehicle weight ,  1/4 mile time  and Transmission type are most predictive!
\end{frame}





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R $\star$Very$\star$ Basics: Draw a Picture}
<<out.width='.35\\linewidth',dev='pdf',eval=TRUE,results='show',echo=TRUE>>= 
mdl <- lm(  mdla$call$formula , data = mtcars ) 
visreg( mdl, xvar="wt")
visreg( mdl, xvar="qsec")
visreg( mdl, xvar="am")
@
\begin{problock}{Oops!}
Transmission type should be a factor.
\end{problock}
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R $\star$Very$\star$ Basics: Draw a Picture Fix}
<<out.width='.35\\linewidth',dev='pdf',eval=TRUE,results='show',echo=TRUE>>= 
mtcars$am<-as.factor( mtcars$am )
mdl <- lm(  mdla$call$formula , data = mtcars ) 
visreg( mdl, xvar="wt")
visreg( mdl, xvar="qsec")
visreg( mdl, xvar="am")
@
This is better ... 
\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R $\star$Very$\star$ Basics: Draw a Picture 3}
<<out.width='.6\\linewidth',dev='pdf',echo=TRUE,eval=TRUE,results='hide'>>= 
 coplot(mpg ~ wt | qsec , data = mtcars, panel = panel.smooth, rows = 1)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




\section{Images}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge Image Input/Output in \R
\end{frame}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Data Representation in \R}

Represent an image as a {\em vector} (more on this later).  This
vector may be derived from a 2 or 3D array of spatially related voxels.
<<imgvec,out.width='.25\\linewidth',dev='pdf'>>=
nvox    <- 100
imgvec <- rnorm( nvox )
mydat<-data.frame( space = 1:nvox, imgvec = imgvec )
ggplot(data=mydat, aes(x=space, y=imgvec, group=1)) + geom_line()
@

\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Data Representation in \R}

Represent an image set as a {\em matrix}.  
<<imgmat,out.width='.45\\linewidth',dev='pdf'>>=
nSubjectsOrTimePoints <- 5
imgmat <- matrix( rep( NA, nSubjectsOrTimePoints * nvox ) , ncol =
nvox )
for ( i in 1:nSubjectsOrTimePoints ) {
  imgmat[ i , ] <- rnorm( nvox )
}
image( imgmat )  # try antsImageWrite( as.antsImage( imgmat ), "imgmat.mha" )
@

\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Reading Images}

Read em and weep

<<myio,echo=TRUE,eval=TRUE,warning=FALSE,results='show',fig.width=4,fig.height=4,out.width='.45\\linewidth'>>=
fn<-getANTsRData( "ch2" , usefixedlocation = FALSE  )
print( fn )

# oro.nifti 
colin <- readNIfTI( fn )

# antsr
colina <- antsImageRead( fn, 3 )
@
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Quickly Show Images by oro.nifti}
<<myviz,echo=TRUE,eval=TRUE,warning=FALSE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
orthographic( as.array( colina ), oma=rep(2,4))
@
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Quickly Show Images w/ANTsR}
<<myviza,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
fn<-"figure/antsrviz.jpeg"
plotANTsImage( as.antsImage( colin ), slices="50x140x5",
  outname=fn)
@
\begin{figure}[h]
  \centering
    \includegraphics[width=1.0\textwidth]{figure/antsrviz.jpeg}
  \caption{The \antsr multi-slice output.}
\end{figure}
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Convert an Image to a Vector}
Use \antsr to convert an image to a vector.
<<convvec,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
imgvec<-colina[  colina > 50  ]
print( length( imgvec ) )
@
Use  oro.nifti to convert an image to a vector.
<<convvec2,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
imgvec<-colin[  colin > 50  ]
print( length( imgvec ) )
@
Both packages enable similar functionality in terms of accessing /
converting images to vectors.  \antsr allows I/O to files other than
nifti such as meta, jpg, dicom, etc, anything ITK reads/writes.
\end{frame}

\section{Quantification}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge Quantifying Images in \R
\end{frame}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Image Quantification with \R}
It is possible to implement full processing pipelines with \R for
submission to distributed computing systems ... 

My knowledge is limited to \antsr.  

\begin{block}{\antsr based image quantification}
\begin{itemize}
\item
\href{http://stnava.github.io/ANTsR/Rd_antsRegistration.html}{antsRegistration
example \textcolor{blue}{(link)}}
\item
\href{http://stnava.github.io/ANTsR/antsSegmentation.html}{Atropos
segmentation \textcolor{blue}{(link)}}
\item
\href{http://stnava.github.io/ANTsR/phantom_population_study.html}{phantom
population study \textcolor{blue}{(link)}}
\end{itemize}
\end{block}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
There are also packages TractR, fMRI, dce-MRI and likely many more.

See the medical imaging task view on CRAN.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{The Basic Toolset from outside \R}
 \textcolor{blue}{Registration: Data is in Examples/Data} 
\begin{alltt}
ANTS 2 -m  CC[r16slice.nii.gz,r64slice.nii.gz,1,4] \newline
 -t SyN[0.25]  -r Gauss[3,0] -o TEST -i 50x40x30
\end{alltt}
\textcolor{blue}{Segmentation}
\begin{alltt}
Atropos -d 2 -a r16slice.nii.gz -x r16mask.nii.gz \newline
-m [0.1,1x1]   -c [10,0]  -i kmeans[3]\newline
-o [Output.nii.gz,Output\_prob\_\%02d.nii.gz]
\end{alltt}
\textcolor{blue}{Template building}
\begin{alltt}
 bash buildtemplateparallel.sh -d 3 -m 30x50x20 \newline 
-t GR  -s CC -c 1 -o OutPrefix  *ImageName*T1x.nii.gz
\end{alltt}
% ants-essential tools:  a mapping, a segmentation, a template and then label-guided and multivariate versions of these.  
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Classical Statistics}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge \R Statistical Methods for Imaging 
\end{frame}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ Basic Linear Regression }
This is a simple regression study that associates diagnosis (dx) with
a local Jacobian-based volume measurement.  

We also look at global volume. 

<<vreg1,echo=TRUE,eval=TRUE,results='show',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
predictor<-as.factor( read.csv("data/phantpredictors.csv")$dx )
gvol<-read.csv("data/globalvols.csv")
attach( gvol )
mdl<-lm( vol ~  predictor  )

@

This is simulated data .... 
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ Basic Linear Regression Output }
<<vreg2,echo=TRUE,eval=TRUE,results='show',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=

summary(mdl) 

@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ Basic Linear Regression Visualization }
visreg has easy to use "natural" visualizations for regression ... 
<<vreg3,echo=TRUE,eval=TRUE,results='show',out.width='.5\\linewidth',dev='pdf'>>=

visreg(mdl) 

@
Next apply the global test to the voxelwise morphometry case.
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ .... voxel-wise statistics in {\bf R}}
\transdissolve
<<voxelwise,echo=TRUE,results='hide',warning=FALSE,highlight=TRUE,eval=TRUE>>=
mask<-antsImageRead( "data/phantmask.nii.gz", 2 )
logjac<-read.csv("data/phantomGlogjacs.csv") # a population of images 
attach( logjac )
nvox<-ncol(logjac)
pvals<-rep(NA,nvox)
for ( x in c(1:nvox) ) 
{ 
  voxels<-logjac[,x]
  lmres<-summary(lm( voxels ~  predictor  ))
  coeff<-coefficients( lmres )
  pval<-coeff[2,4]
  pvals[x]<-pval
}
qvals<-p.adjust(pvals,method="BH")
print(min(qvals))
pvali<-antsImageClone( mask )
pvali[ mask > 0 ]<-1-qvals 
plotANTsImage( mask, functional= list( pvali ), threshold="0.99x1" ,
outname="figure/lmreg.jpeg" )

@
Exercise: What happens when you include globalvol as a covariate?
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ Visualizing voxel-wise statistics in {\bf R}}
\transdissolve
\begin{figure}[h]
  \centering
    \includegraphics[width=0.5\textwidth]{figure/lmreg.jpeg}
  \caption{The regression solution p-values thresholded at 0.01 FDR-corrected.}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ .... multivariate statistics in {\bf R}}
\transdissolve
<<multivar,echo=TRUE,results='hide',warning=FALSE>>=

continuousDX <- 1-as.numeric(predictor) 
continuousDX2 <- gvol
mypreds<-as.matrix( cbind( continuousDX, continuousDX2 ) )
sccan<-sparseDecom2( inmatrix=list( as.matrix(logjac), mypreds ),
inmask = c( mask , NA ) ,
   sparseness=c( 0.25, -1 ), nvecs=1, its=2, smooth=1, perms=200 ) 
sccansol <- sccan$eig1[[1]]
sccansol[ mask > 0 ] <- sccansol[ mask > 0 ] / max( sccansol[ mask > 0
] )
plotANTsImage( mask, functional= list( sccansol ),
  threshold="0.05x1", outname="figure/mvarreg.jpeg" )

@
Exercise: What happens when you include globalvol as a covariate?
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ Visualizing multivariate statistics in {\bf R}}
\transdissolve
\begin{figure}[h]
  \centering
    \includegraphics[width=0.5\textwidth]{figure/mvarreg.jpeg}
  \caption{The sccan solution with p-value \Sexpr{sccan$ccasummary$Variate000[1]}.}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ANOVA 1}
How do we assess the importance of multiple predictors acting together
within classic regression?
<<anova1,echo=TRUE,eval=TRUE,results='show',warning=FALSE,out.width='.4\\linewidth'>>=
nki<-read.csv('data/labelresultsN.csv')
print(names(nki)[1:8])
image(cor(as.matrix(nki[,4:37])))
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ANOVA 2}
How do we assess the importance of multiple predictors acting together
within classic regression?
<<anova2,echo=1:3,eval=TRUE,results='show',warning=FALSE>>=
mdl1<-lm( LABEL_14 ~ SEX + VOLUME , data=nki )
mdl2<-lm( LABEL_14 ~ SEX + VOLUME + AGE + I(AGE^2) , data=nki )
print( anova(mdl1,mdl2) )
jpeg(file="./figure/antsrAge.jpeg",quality = 95, width=900,height=450)
visreg(mdl2,xvar="AGE")
dev.off()
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{ANOVA 3}
How do we assess the importance of multiple predictors acting together
within classic regression?
\begin{figure}[h]
  \centering
  \includegraphics[width=0.9\textwidth]{figure/antsrAge.jpeg}
  \caption{The quadratic regression of age against thickness while
  controlling for gender and brain volume}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Multivariate Data Analysis and "Big" Data Inspection}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge \R Multivariate Methods for "Big Data" \newline \newline
\newline
\large first: some brief theory
\end{frame}
}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{What is multiple regression?}
The solution to a quadratic minimization problem:
\begin{block}{Multiple Regression}
$$ 
\|  y - X \beta \|^2  +  \textcolor{blue}{\lambda \| \beta \| ^2}
$$
Solved by ordinary least squares methods:
$$ 
\hat{\beta}=( X^T X)^{-1} X^T y 
$$
with theory for turning $\beta$ entries into "significance" measurements.
\end{block}
The "ridge" penalty is useful if $p >> n$.
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Principal Component Analysis}
Also the solution to a quadratic minimization problem:
\begin{block}{PCA: $U$, $V$ minimize reconstruction error:}
$$ 
\|  X  - U V^T \|^2   +  \textcolor{blue}{\sum_k \lambda_k \| V_k
\|_1 }
$$
Each of the columns of $X$ is a linear combination of the
columns of $U$.  Easy solution in \R (w/o penalties):
<<out.width='.4\\linewidth',dev='jpeg',eval=FALSE,echo=TRUE,show='hide'>>= 
mysolution=svd(X)  # or prcomp(X) if X not centered
@
\end{block}
The $\ell_1$ penalty is useful if $p >> n$.
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{frame}[fragile]
\frametitle{Principal Component Analysis Example}
<<out.width='.8\\linewidth',dev='jpeg',eval=TRUE,show='hide',echo=FALSE>>= 
PCbiplot <- function(PC, x="PC1", y="PC2") {
    # PC being a prcomp object
    data <- data.frame(obsnames=row.names(PC$x), PC$x)
    plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
    plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
    datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
    mult <- min(
        (max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
        (max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
        )
    datapc <- transform(datapc,
            v1 = .7 * mult * (get(x)),
            v2 = .7 * mult * (get(y))
            )
    plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
    plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), alpha=0.75, color="red")
    plot
}
fit <- prcomp(USArrests, scale=T)
@

<<out.width='.85\\linewidth',dev='pdf',echo=FALSE,eval=TRUE>>= 
PCbiplot(fit)
@
\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Canonical Correlation Analysis}
\begin{block}{CCA Generalizes Multiple Regression}
$$  Y V + \textcolor{blue}{\sum_k \lambda_k \| V_k \|_1} \propto X W  + \textcolor{blue}{\sum_k \gamma_k \| W_k \|_1}$$
where $Y, V, X, W$ are matrices and $V, W$ are canonical variates (the
CCA solutions). 
Also easy in \R (SVD used internally):
<<out.width='.4\\linewidth',dev='jpeg',echo=TRUE,eval=TRUE,results='hide'>>= 
 enginedata<-mtcars[,c(2,3,4,11)]
 outputdata<-mtcars[,c(1,7)]
 mycca<-cancor( enginedata, outputdata )
@
\end{block}
CCA is "symmetric" in that the sets X and Y have equivalent
status.  A truly multivariate multiple regression.
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Canonical Correlation Analysis Visualization 1}
<<out.width='.7\\linewidth',dev='pdf',echo=TRUE,eval=TRUE,warning=FALSE,results='show'>>= 
print( mycca )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Canonical Correlation Analysis Visualization 2}
<<out.width='.65\\linewidth',dev='pdf',echo=TRUE,eval=TRUE,warning=FALSE,results='hide'>>= 
heplot(mycca, xpd=TRUE, scale=0.3)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Sparse multiple regression/PCA/CCA}
Any of the methods can be made sparse by enforcing the penalties
previously highlighted in \textcolor{blue}{blue}.
\begin{block}{Sparse Optimization}
\begin{itemize}
\item Formulate the problem as a constrained optimization.
\item Identify the gradient descent solution---{\em without
sparseness}.
\item Use projected gradient descent to solve the optimization---{\em
with sparseness}.
\item In imaging, other constraints are valuable too.
\end{itemize}
\end{block}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate Study - PBAC}
{\em PBAC:} \R ready medical imaging data.\newline 
<<out.width='.4\\linewidth',dev='jpeg',results='hide',eval=TRUE,echo=FALSE>>= 
pbacc<-list.files(path = "./data", pattern = glob2rx("pbac*csv")  ,
full.names = T )
pbacTEcog<-read.csv(pbacc[1])
pbacTRcog<-read.csv(pbacc[2])
pbaci<-list.files(path = "./data", pattern = glob2rx("pbac*mha") ,
full.names = T )
pbacTEimg<-as.matrix( antsImageRead(pbaci[1], 2 ) )
pbacTRimg<-as.matrix( antsImageRead(pbaci[2], 2 ) )
@
We have training (n=\Sexpr{nrow(pbacTRimg)})/testing (n=\Sexpr{nrow(pbacTEimg)}) data images $+$ psychometrics
and analyze the relationship between gray matter and cognition.
<<out.width='.4\\linewidth',dev='jpeg',results='show',eval=TRUE,echo=TRUE>>= 
pbacTRcog[c(1,13,28),1:6]
# also pbac imaging data comes from this mask 
mask<-antsImageRead( list.files(path = "./data", pattern=glob2rx("gmask_2mmb.nii.gz") , full.names=T ) , 3 )
# with anatomical labels 
pbacaal<-antsImageRead( list.files(path = "./data",
pattern=glob2rx("pbac_aal.nii.gz"), full.names=T ) , 3 )
data("aal",package="ANTsR") # description of aal
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate - PBAC ROIs}
<<out.width='.4\\linewidth',dev='jpeg',eval=TRUE,results='hide',echo=TRUE>>= 
inmask <-  mask > 0.5 
mylabs<-sort( unique( pbacaal[ inmask  &  pbacaal > 0.5 &  pbacaal <
91   &  pbacaal != 51 &  pbacaal != 52 &  pbacaal != 53 &  pbacaal != 54 ] ) )
roimatrix<-matrix( rep( NA, length( mylabs ) * nrow( pbacTRimg ) ) ,
ncol=length(mylabs ) )
for ( i in 1:length(mylabs) ) {
# get vector for this label 
  labelVec <- as.numeric( pbacaal[ inmask ] == mylabs[ i ] )   
  roimatrix[   , i  ] <- pbacTRimg %*% ( labelVec / sum( labelVec ) ) 
  }
colnames( roimatrix ) <- aal$label_name[ mylabs ]
mydf<-data.frame( pbacTRcog, roimatrix ) 
@
Next we will analyze these ROIs and their relationship with demographics.
\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: Inspect Data - PBAC cog}
<<out.width='.7\\linewidth',dev='pdf',eval=TRUE,results='show',echo=TRUE>>= 
pheatmap( cor( pbacTRcog ) , cluster_rows = F , cluster_cols =  F )
@
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: Inspect Data - PBAC Cog Constellation Plot}
<<out.width='.75\\linewidth',dev='pdf',eval=TRUE,results='show',echo=FALSE>>= 
stars( pbacTRcog,
       labels = row.names(mydf), cex = 0.2, scale = TRUE, radius = FALSE, full = TRUE, flip.labels = FALSE,
       mar = c( 0, 0, 2, 0 ), main = "Brain Constellation Map of PBAC Cognition" )
@
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: Inspect Data - PBAC ROI}
<<out.width='.7\\linewidth',dev='pdf',eval=TRUE,results='show',echo=TRUE>>= 
pheatmap( cor( roimatrix ) , cluster_rows = F , cluster_cols =  F )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Basics: Inspect Data - PBAC ROI Constellation Plot}
<<out.width='.75\\linewidth',dev='pdf',eval=TRUE,results='show',echo=FALSE>>= 
stars( roimatrix,
       labels = row.names(mydf), cex = 0.2, scale = TRUE, radius = FALSE, full = TRUE, flip.labels = FALSE,
       mar = c( 0, 0, 2, 0 ), main = "Brain Constellation Map of PBAC ROIs" )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{1200 Subject Constellation Plot}
\begin{figure}[t]
\begin{center} 
\includegraphics[width=2.75in]{./figure/constellation.pdf}
\end{center}
\caption{Data-inspection for a large-scale study.}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: Inspect Data - PBAC cog
$\leftrightarrow$ ROI}
<<out.width='.7\\linewidth',dev='pdf',eval=TRUE,results='show',echo=TRUE>>= 
pheatmap( cor( pbacTRcog , roimatrix ) , cluster_rows = F , cluster_cols =  F )
@
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate - PBAC ROI Study}
<<out.width='.4\\linewidth',dev='jpeg',eval=TRUE,results='hide',echo=TRUE>>= 
myform<-paste( colnames( roimatrix ), collapse='+'  )
myform<-as.formula( paste( "delay_free_adj~", myform , "+edu") )
mydf<-data.frame( pbacTRcog, roimatrix ) 
row.names(mydf)<- paste( c(1:nrow(pbacTRcog)),"_",as.character( pbacTRcog$mmse ),sep='')
mdl <- lm(  myform , data = mydf ) 
mdla<-stepAIC( mdl , direction =  c("forward" ) , k = 20 , steps= 20  )
ageregions<-gsub("_","",as.character(mdla$call$formula)[3])
@
Various brain regions, together, predict naming\_adj ... \Sexpr{ageregions}.
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: Draw a Picture - PBAC }
<<out.width='.35\\linewidth',dev='pdf',eval=TRUE,results='show',echo=TRUE>>= 
visreg( mdla, xvar="Angular_L")
visreg( mdla, xvar="Frontal_Mid_R")
visreg( mdla, xvar="Temporal_Pole_Sup_L")
@
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: PBAC Draw a Picture 2}
<<out.width='.6\\linewidth',dev='pdf',echo=TRUE,eval=TRUE,results='hide'>>= 
 coplot( delay_free_adj ~ Angular_L + Frontal_Mid_R + Temporal_Pole_Sup_L | age , data = mydf , panel = panel.smooth, rows = 1)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{\R Multivariate: PBAC SCCAN}
Run SCCAN between raw GM data and cognition
<<out.width='.6\\linewidth',dev='pdf',echo=2,eval=TRUE,results='hide'>>= 
nv<-5
mysccan<-sparseDecom2( inmatrix=list( as.matrix(pbacTRcog), pbacTRimg
) , inmask=c( NA , mask ), smooth = 1 ,
  sparseness=c( -0.07, 0.2 ), nvecs=nv, its=3 , perms=0, cthresh=c(0,250) ) 
@
<<out.width='.6\\linewidth',dev='pdf',echo=FALSE,eval=TRUE,results='show'>>= 
for ( ind in 1:nv ) {
  mytests<-names( pbacTRcog )[ abs( mysccan$eig1[,ind] ) > 0 ]
  myform<-paste( mytests , collapse="+" )
  vec<-antsImageRead( paste("sccaView2vec00",ind-1,".nii.gz",sep='') ,  3 )
  vec<-vec[ inmask ]
  traindf<-data.frame( gm= pbacTRimg %*% vec, pbacTRcog )
  myform<-as.formula( paste( "gm~",myform) )
  predlm<-lm(  myform , data=traindf )
  predcog<-predict( predlm , newdata=pbacTRcog )
  gmtest<-pbacTRimg %*% vec
  print( myform ) 
  print( paste("Train Correlation:",ind, cor.test( gmtest, predcog)$est  ) )
}
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Predictive Statistical Methods}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge \R and Prediction
\end{frame}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Prediction: PBAC---Cognition from ROIs}
Get the testing data ROIs (code hidden).\newline
<<echo=FALSE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide'>>=
testroi<-matrix( rep( NA, length( mylabs ) * nrow( pbacTEimg ) ) ,ncol=length(mylabs ) )
for ( i in 1:length(mylabs) ) {
  labelVec <- as.numeric( pbacaal[ inmask ] == mylabs[ i ] )   
  testroi[   , i  ] <- pbacTEimg %*% ( labelVec / sum( labelVec ) ) 
  }
colnames( testroi )<-colnames( roimatrix )
testdf<-data.frame( testroi , edu = pbacTEcog$edu )
@
Predict the naming from test ROI data w/ ordinary regression.
<<predictpbac0,echo=1:2,warning=FALSE,eval=TRUE,tidy=TRUE,results='show',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='pdf'>>=
predcog<-predict( mdla , newdata=testdf )
print( paste("Test Correlation:", cor.test( pbacTEcog$delay_free_adj, predcog)$est  ) )
predmdl<-lm(  predcog ~ 1 + delay_free_adj, data = pbacTEcog )
visreg( predmdl )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Prediction: PBAC---Cognition from Brain}
Predict the test voxel data from cognition id'd by SCCAN.
<<predictpbac,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='show',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='pdf'>>=
<<out.width='.6\\linewidth',dev='pdf',echo=FALSE,eval=TRUE,results='show'>>= 
for ( ind in 1:nv ) {
  mytests<-names( pbacTRcog )[ abs( mysccan$eig1[,ind] ) > 0 ]
  myform<-paste( mytests , collapse="+" )
  vec<-antsImageRead( paste("sccaView2vec00",ind-1,".nii.gz",sep='') ,  3 )
  vec<-vec[ inmask ]
  traindf<-data.frame( gm= pbacTRimg %*% vec, cog = as.matrix( pbacTRcog) %*% mysccan$eig1[,ind ] )
  cogtest <- as.matrix( pbacTEcog) %*% mysccan$eig1[,ind ] 
  gmtest<-pbacTEimg %*% vec
  print( myform ) 
  print( paste("Test Correlation:",ind, cor.test( gmtest, cogtest)$est  ) )
}
@
The SCCAN model is equally predictive but much more specific.
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Prediction: PBAC---Cognition from Brain}
<<predictpbac2,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='show',fig.width=4,fig.height=4,out.width='.7\\linewidth',dev='pdf'>>=
truegm <- c( pbacTEimg %*% vec )
predmdl<-lm(  predgm ~ truegm , data = pbacTEcog )
print( paste("Test Correlation:", cor.test( truegm, predgm )$est  ) )
visreg( predmdl )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Cross-Validation of Diagnosis}
\begin{block}{boot}
<<out.width='.4\\linewidth',dev='jpeg',eval=TRUE,results='hide',echo=TRUE>>= 
dx<-as.factor( pbacTRcog$mmse < 26  )
dx<-as.factor( pbacTRcog$fluency_adj < 2.6  )
traindata<-data.frame( dx=dx, roimatrix )
myform<-paste( "dx~", paste( colnames( roimatrix )[1:20] , collapse='+' ) )
mdl<-glm( as.formula(myform), data=traindata, family="binomial")
dd<-0 ; ntests<-20
for ( i in 1:ntests ) dd<-dd+cv.glm(traindata, mdl,K=5)$delta[1]* ( 1/ ntests )
@
Reasonable classification rates.
<<out.width='.4\\linewidth',dev='jpeg',eval=TRUE,results='show',echo=FALSE>>= 
print(paste("prediction % misclassification" , dd * ntests ) )
@
\end{block}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Prediction: BRATS Challenge}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



\section{fMRI}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge fM{\bf R}I
\end{frame}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{fMRI Helper Functions 1}
A function for averaging a list of images voxel-wise.  Note: It's dimension-free.
<<myhelpers1,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
avgimg <- function(  mylist , mask )
{
avg<-antsImageClone( mylist[[1]] )
avg[ mask == 1 ]<-0
for ( i in 1:length(mylist) ) 
  {
  avg[ mask == 1 ] <- avg[ mask == 1 ] + mylist[[i]][ mask == 1 ] * 1/length(mylist)
  }
 return( avg )
}
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{fMRI Helper Functions 2}
A function for computing the voxel-wise absolute difference of an image list
from its average.
<<myhelpers2,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
sdimg <- function(  mylist , mask )
{
avg<-avgimg( mylist , mask )
sdi<-antsImageClone( avg )
sdi[ mask == 1 ]<-0
for ( i in 1:length(mylist) ) 
  {
  sdi[ mask == 1 ] <- sdi[ mask == 1 ] + abs( mylist[[i]][ mask == 1 ] - avg[ mask == 1 ] )  * 1/length(mylist)
  }
 return( sdi )
}
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{fMRI Helper Functions 3}
A function to interleave two R numeric vectors. 
<<myhelpers3,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
interleave <- function(v1,v2)
{
ord1 <- 2*(1:length(v1))-1
ord2 <- 2*(1:length(v2))
c(v1,v2)[order(c(ord1,ord2))]
}
@
Why might we want this?
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{frame}[fragile]
\frametitle{BOLD fMRI Motor Tasks 1}
"A test-retest fMRI dataset for motor, language and spatial attention
functions" --- Gigascience, 2013.

Subject: 08143633

<<boldmotor1,echo=FALSE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
blockfing = c(0, 36, 72, 108,144)
blockfoot = c(12, 48, 84, 120, 156)
ct<-1 
fn<-c('data/fmri_motor_sub1_s1.nii.gz','data/fmri_motor_sub1_s2.nii.gz')[1]
pre<-paste('fmri_motor_',ct,sep='')
@

<<boldmotor2,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  fmri<-antsImageRead( fn , 4 )
  hrf <- hemodynamicRF( scans=dim(fmri)[4] , onsets=blockfing , durations=rep(  12,  length( blockfing ) ) ,  rt=2.5 )
  hrf[1:4]<-NA # first few frames are junk 
  myvars<-getfMRInuisanceVariables( fmri, moreaccurate = FALSE ,
  maskThresh=100 )
@
\end{frame}


\begin{frame}[fragile]
\frametitle{BOLD fMRI Motor Tasks 2}
The previous functions compute \R friendly variables for fMRI
processing: Nuisance, mean, mask, matrix.  $+$ the HRF.
<<boldmotor3,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  mat<-myvars$matrixTimeSeries
  avg<-myvars$avgImage
  mask<-myvars$mask 
  nuis<-( myvars$nuisancevariables )
  print( colnames( nuis ) )
  antsImageWrite(avg,paste(pre,"avg.nii.gz",sep=""))
  plotANTsImage(myantsimage = avg, functional = list(mask), slices =
  "12x20x3",    axis = 3, threshold = "0.5x1.5")
@
\end{frame}  


\begin{frame}[fragile]
\frametitle{BOLD fMRI Motor Tasks 3}
Use multiple regression to relate a task-design (convolved with HRF) to BOLD activation.
<<boldmotor4,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  globsig <- myvars$globalsignal 
  betas<-rep(NA, ncol( mat ) )
  for ( i in 1:ncol(mat) ) {
    vox<-mat[ , i ]
    mdl<-lm( vox ~  hrf + globsig + motion1 + motion2 + motion3 + compcorr1 + compcorr2 + compcorr3, data = data.frame( nuis )  ) 
    betas[i]<-coefficients(summary(mdl))[2,3] # probably better way
    }
  betaimg<-antsImageClone( mask ) # put beta vals in image space
  betaimg[ mask > 0.5 ] <- betas 
  print( max( abs( betas ) ) )  # around 10 or so 
  # much much faster but i haven't figured out how to get results out easily
  fastResults<-lm( mat[,1:2] ~  hrf +  myvars$globalsignal  + motion1 + motion2 + motion3 + compcorr1 + compcorr2 + compcorr3, data = data.frame( nuis )  ) 
  antsImageWrite(betaimg, paste(pre,"betas.nii.gz",sep="") )
  @
\end{frame}

\begin{frame}[fragile]
\frametitle{BOLD fMRI Motor Tasks 4}
<<boldmotor5,echo=FALSE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  mx<-max( betas ) 
  plotANTsImage(myantsimage = avg, functional = list(betaimg), slices ="15x20x1",    axis = 3, threshold = paste("9x",mx,sep=''),outname="figure/antsrLMmot1.jpeg")
 if ( ! exists("mymni") ) {
    mymni<-list( antsImageRead(getANTsRData('mni'),3), 
                 antsImageRead(getANTsRData('mnib'),3), 
                 antsImageRead(getANTsRData('mnia'),3) )
  }
  clust<-antsImageClone( betaimg )
  clust <- labelClusters( clust , minClusterSize=10, minThresh=5, maxThresh=100)
  ofn <- paste("/tmp/",pre,sep='')
@
<<boldmotor6,echo=TRUE,warning=FALSE,eval=FALSE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
 gcoords<-getTemplateCoordinates( list( avg , clust ) , mymni ,  convertToTal = TRUE , outprefix = ofn )
 print( gcoords$templatepoints )
 myregion<-sub("_","",gcoords$templatepoints$AAL[1])
@
\begin{figure}[b]
\begin{center} 
\includegraphics[width=4.5in]{./figure/antsrLMmot1.jpeg}
\end{center}
\caption{Univariate results for fingertapping include \Sexpr{myregion}.}
\end{figure}
Is that the "right" location?
\end{frame}

\begin{frame}[fragile]
\frametitle{BOLD fMRI Motor Tasks 5}
We can look at the code for this if it is of interest ... 
<<boldmotor7,echo=FALSE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  # quick multivariate version 
  rmat<-residuals( lm( mat ~  myvars$globalsignal + motion1 + motion2 + motion3 + compcorr1 + compcorr2 + compcorr3, data = data.frame( nuis )  ) )
  cblock <- as.numeric(hrf[5:length(hrf)]) 
  cblock2 <- as.numeric( cblock > 0 )
  mypreds<-as.matrix( cbind( cblock, cblock2 ) )
  sccan<-sparseDecom2( inmatrix=list( rmat[5:length(hrf),] , mypreds ), inmask = c( mask , NA ) ,
  sparseness=c( 0.03, 1 ), nvecs=1, its=3, smooth=0, perms=10, cthresh = c(20, 0) ) 
  antsImageWrite( sccan$eig1[[1]] ,  paste(pre,"sccan.nii.gz",sep="" )  )
  eigimg <- sccan$eig1[[1]]
  ImageMath(3,eigimg,"Normalize",eigimg)
  plotANTsImage(myantsimage = avg, functional = list(eigimg), slices ="15x20x1",    axis = 3, threshold = "0.1x1",outname="figure/antsrsccanmot1.jpeg")
@
\begin{figure}[b]
\begin{center} 
\includegraphics[width=4.5in]{./figure/antsrsccanmot1.jpeg}
\end{center}
\caption{Multivariate results for fingertapping.}
\end{figure}
\begin{block}{Exercise: Fingertapping repeatability}
Repeat with subjects fmri\_motor\_sub1\_s2.nii.gz and
fmri\_motor\_sub2\_s1.nii.gz 

Evaluate overlap of signal.
\end{block}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD fMRI Processing Inspection}
Use multivariate decomposition to help understand both the data and
the nuisance variables. 
<<boldmotor8,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
nvecs<-11
ff <- sparseDecom(rmat[!is.na(hrf), ], mask, 1.25/nvecs, nvecs,
    its = 5, cthresh = 5, smooth = 1, z = -0.9)
for ( i in 1:nvecs ) {
  print(paste("Test",i))
  mdl<-lm( ff$projections[,i]  ~  cblock + myvars$globalsignal[  !is.na(hrf)] +  motion1 + motion2 + motion3 + compcorr1 + compcorr2 + compcorr3, data =  data.frame( nuis[!is.na(hrf),]  ) )
  print( summary( mdl ) )
}
dat<-data.frame(  time = ( (1:length(hrf[  !is.na(hrf)] ))*2.5  ), signal = ff$projections[, 2],
nuis= ff$projections[, 3] , hrf = hrf[  !is.na(hrf)] ) 
@

<<boldmotor8b,echo=FALSE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
jpeg(file="./figure/anstrboldsig1.jpeg",width=1024,height=256,quality=90)
ggplot( data=dat, aes(x=time, y=signal) ) + geom_line() + ylab("BOLD
Signal") + xlab( "time (ms)" )
dev.off()
jpeg(file="./figure/anstrboldsigN.jpeg",width=1024,height=256,quality=90)
ggplot( data=dat, aes(x=time, y=nuis) ) + geom_line() + ylab("BOLD
Nuisance") + xlab( "time (ms)" )
dev.off()
jpeg(file="./figure/anstrboldHRF.jpeg",width=1024,height=256,quality=90)
ggplot( data=dat, aes(x=time, y=hrf) ) + geom_line() + ylab("HRF") + xlab( "time (ms)" )
dev.off()
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD Decomposition with Regression-Task}
Use multivariate decomposition to help understand both the data and
the nuisance variables. 
<<boldmotor9,echo=1,warning=FALSE,eval=TRUE,tidy=TRUE,results='show',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  mdl<-lm( ff$projections[,2]  ~  cblock + myvars$globalsignal[
  !is.na(hrf)] +  motion1 + motion2 + motion3 + compcorr1 + compcorr2
  + compcorr3, data =  data.frame( nuis[!is.na(hrf),]  ) )
 print( coefficients(summary(mdl) )[,4] )
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD Decomposition with Regression-Nuisance}
Use multivariate decomposition to help understand both the data and
the nuisance variables. 
<<boldmotor10,echo=1,warning=FALSE,eval=TRUE,tidy=TRUE,results='show',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  mdl<-lm( ff$projections[,3]  ~  cblock + myvars$globalsignal[  !is.na(hrf)] +  motion1 + motion2 + motion3 + compcorr1 + compcorr2 + compcorr3, data =  data.frame( nuis[!is.na(hrf),]  ) )
 print( coefficients(summary(mdl) )[,4] )
 @
Where in the brain is this?
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD Decomposition with Regression-Task in the Brain}
Use multivariate decomposition to help understand both the data and
the nuisance variables. 
<<boldmotor9v,echo=1,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  eigimg <- ff$eigenanatomyimages[[2]]
  ImageMath(3,eigimg,"Normalize",eigimg)
plotANTsImage(myantsimage = avg, functional = list(eigimg), slices ="1x20x1",    axis = 3, threshold = "0.01x1",col="red",outname="figure/antsrsdecom2.jpeg")
@
\begin{figure}[b]
\begin{center} 
\includegraphics[width=4.5in]{./figure/antsrsdecom2.jpeg}
\end{center}
\caption{Multivariate results for fingertapping... task areas}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD Decomposition with Regression-Nuis in the Brain}
Use multivariate decomposition to help understand both the data and
the nuisance variables. 
<<boldmotor10v,echo=1,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
  eigimg <- ff$eigenanatomyimages[[3]]
  ImageMath(3,eigimg,"Normalize",eigimg)
plotANTsImage(myantsimage = avg, functional = list(eigimg), slices ="1x20x1",    axis = 3, threshold = "0.01x1",col="blue",outname="figure/antsrsdecom3.jpeg")
@
\begin{figure}[b]
\begin{center} 
\includegraphics[width=4.5in]{./figure/antsrsdecom3.jpeg}
\end{center}
\caption{Multivariate results for fingertapping... nuis areas}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD fMRI Signals}
\begin{figure}[b]
\begin{center} 
\includegraphics[width=3.5in]{./figure/anstrboldHRF.jpeg}\newline
\includegraphics[width=3.5in]{./figure/anstrboldsig1.jpeg}\newline
\includegraphics[width=3.5in]{./figure/anstrboldsigN.jpeg}
\end{center}
\caption{BOLD signals.}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{BOLD fMRI Language Tasks}
Exercise:  Check the code below and run the language task studies from
the Gigascience article. 
<<boldlang,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
if ( FALSE ) {
fmri<-antsImageRead('data/fmri_covert_verb_generation_sub1_s2.nii.gz',4)
blocko = c(1,24, 48, 72, 96, 120, 144 )
hrf <- hemodynamicRF( scans=dim(fmri)[4] , onsets=blocko , durations=rep(  12,  length( blocko ) ) ,  rt=2.5 )
hrf[1:4]<-NA # first few frames are junk 
myvars<-getfMRInuisanceVariables( fmri, moreaccurate = TRUE ,maskThresh=100 )
avg<-myvars$avgImage
antsImageWrite(avg,"avg_lang.nii.gz")
mask<-myvars$mask 
mat<-myvars$matrixTimeSeries
# fmri2<-antsImageClone(fmri)
# SmoothImage(4,fmri,1,fmri2)
# mat<-timeseries2matrix( fmri2, mask ) # 
nuis<-( myvars$nuisancevariables )
print( colnames( nuis ) )
plotANTsImage(myantsimage = avg, functional = list(mask), slices = "12x20x3",    axis = 3, threshold = "0.5x1.5")
betas<-rep(NA, ncol( mat ) )
for ( i in 1:ncol(mat) ) 
  {
  vox<-mat[ , i ]
  mdl<-lm( vox ~  hrf + myvars$globalsignal + motion1 + compcorr1 + compcorr2 + compcorr3, data = data.frame( nuis )  )
  betas[i]<-coefficients(summary(mdl))[2,3]
  }
betaimg<-antsImageClone( mask )
betaimg[ mask > 0 ] <- betas 
mx<-max( betas ) 
print( mx )
th<-paste("3x",mx,sep='')
plotANTsImage(myantsimage = avg, functional = list(betaimg), slices ="12x20x3",    axis = 3, threshold = th )
antsImageWrite(betaimg,"betas_lang.nii.gz")
#
# quick multivariate version 
#
mat<-timeseries2matrix(  fmri ,  mask  )
mat<-myvars$matrixTimeSeries
rmat<-residuals( lm( mat ~  myvars$globalsignal + motion1 +  motion2 +  motion3 + compcorr1   + compcorr2+ compcorr3,  data = data.frame( nuis )  ) )
#
#,
cblock <- as.numeric(hrf[5:length(hrf)]) 
cblock2 <- as.numeric( cblock > 0 )
mypreds<-as.matrix( cbind( cblock, cblock2 ) )
sccan<-sparseDecom2( inmatrix=list( rmat[5:length(hrf),] , mypreds ), inmask = c( mask , NA ) ,
   sparseness=c( 0.1, 0.5 ), nvecs=1, its=3, smooth=1, perms=5, cthresh = c(11, 0)) 
antsImageWrite( sccan$eig1[[1]] , 'sccan_lang.nii.gz' )
#
# eigenanatomy 
#
ff<-sparseDecom( rmat[!is.na(hrf),] , mask, 0.1,10,its=5,cthresh=5,smooth=1,z=-0.7)
for ( i in 1:10 ) {
  print(paste("ASSS",i))
  mdl<-lm( ff$projections[,i]  ~  cblock + myvars$globalsignal[  !is.na(hrf)] +  motion1 + motion2 + motion3 + compcorr1 + compcorr2 + compcorr3, data =  data.frame( nuis[!is.na(hrf),]  ) )
  print( summary( mdl ) )
}
}
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Simple ASL CBF}
Arterial spin labeling (ASL) can measure cerebral blood flow (CBF)
non-invasively and more directly than BOLD.   It requires specialized
processing techniques not widely available.
<<aslcbf,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.05\\linewidth',dev='jpeg'>>=
fns<-Sys.glob( file.path( "./data/eld*nii.gz" ) )
asl<-antsImageRead( fns[1] , 4 )
perf<-aslPerfusion( asl, maskThresh=300, moreaccurate=FALSE )
param <- list( sequence="pcasl", m0=perf$m0 )
cbf <- quantifyCBF( perf$perfusion, perf$mask, param )
plotANTsImage( cbf$meancbf ,slices="5x17x3",axis=3,outname="figure/antsrsimpcbf.jpeg")
@
\begin{figure}[b]
\begin{center} 
\includegraphics[width=2.5in]{./figure/antsrsimpcbf.jpeg}
\end{center}
\caption{The \antsr simple CBF estimate with standard regression.}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{fMRI Boot-Strapping}
Load some data already processed.
<<mybootstrap,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
fns<-Sys.glob(file.path("./data/eld*nii.gz"))
asl<-antsImageRead( fns[1] ,4)
seg<-antsImageRead( fns[3] ,3)
mask<-antsImageClone( seg )
mask[ seg > 0 ]<-1
mat<-timeseries2matrix( asl, mask )
cbflist<-list( ) 
@
ASL-CBF estimates are unstable and subject to motion artifact. \newline
{\em Idea}: We can try resampling methods to estimate both uncertainty and a
"true" mean CBF value per voxel. 
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{fMRI Boot-Strapping 2}
Luckily, this is easy to implement in \R.
<<mybootstrap2,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.05\\linewidth',dev='jpeg'>>=
for ( i in 1:4 ) {
  timeinds<-sample( 2:nrow(mat) ,
     round( nrow(mat) )*0.3 ) 
  timeinds<-( timeinds %% 2 )+timeinds
  timeinds<-interleave( timeinds-1, timeinds )
  aslarr<-as.array( asl ) 
  aslarr2<-aslarr[,,,timeinds]
  aslsub<-as.antsImage( aslarr2 )
  antsCopyImageInfo( aslsub , asl )
  proc <- aslPerfusion( aslsub, mask=mask, moreaccurate=FALSE ,  dorobust=0 )
  param <- list( sequence="pcasl", m0=proc$m0 )
  cbf <- quantifyCBF( proc$perfusion, mask, param )
  antsImageWrite( cbf$meancbf, 'temp1.nii.gz')
  cbflist<-lappend( cbflist, cbf$meancbf )
}
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{fMRI Boot-Strapping 3}
<<mybootstrap3,echo=TRUE,warning=FALSE,eval=TRUE,tidy=TRUE,results='hide',fig.width=4,fig.height=4,out.width='.4\\linewidth',dev='jpeg'>>=
avgcbf<-avgimg( cbflist , mask )
sdi<-sdimg( cbflist , mask )
avgcbft<-antsImageClone( avgcbf )
avgcbft[ sdi > 25 ] <- 0 
plotANTsImage( avgcbft,
slices="5x17x3",axis=3,outname="figure/antsravgcbft.jpeg")
plotANTsImage( avgcbft, functional=list(sdi), color="red", slices="5x17x3",axis=3 ,threshold="20x55",outname="figure/antsrsdcbf.jpeg")
@
\begin{figure}[b]
\begin{center} 
\includegraphics[width=2.5in]{./figure/antsravgcbft.jpeg}
\end{center}
\begin{center} 
\includegraphics[width=2.5in]{./figure/antsrsdcbf.jpeg}
\end{center}
\caption{The \antsr bootstrapped CBF with estimated CBF variance.}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Review So Far ...}
\begin{problock}{What Have We Ignored?}
\begin{itemize}[<+->]
\item More general linear models: e.g. multinomial, logit ... 
\item LDA, SVM, advanced visualization, etc. 
\item functions/packages: {\em pairs, glmnet, PMA, igraph} ...
\item simulation --- very valuable.
\item too many \R $\star$tricks$\star$ to remember w/o practice.
\end{itemize}
\end{problock}
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Review So Far ...}
\begin{block}{Accomplishments!}
\begin{itemize}[<+->]
\item Image I/O \& ROI analysis
\item Morphometry \& Regression
\item Multivariate methods for Large Imaging Datasets
\item Prediction examples ... 
\item fMRI: univariate \& multivariate
\item ASL Cerebral Blood Flow 
\item Various references to valuable \R $\star$tricks$\star$.
\end{itemize}
\end{block}
\end{frame}


\section{Reproducible Examples}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
\setbeamertemplate{navigation symbols}{}
\begin{frame}[plain]
\huge Example github projects for reproducible research 
\end{frame}
}

\begin{frame}[fragile]
\frametitle{Example Papers based on R: SCCAN}

\end{frame}

\begin{frame}[fragile]
\frametitle{Example Papers based on R: Eigenanatomy}

\end{frame}

\begin{frame}[fragile]
\frametitle{Example Papers based on R: ASL-CBF}
  \begin{block}{Three steps in an ASL imaging study.}
    \begin{itemize}
      \item Normalization / segmentation
      \item Data inspection
      \item Analysis
      \item Visualization See github VisDemo
    \end{itemize}
  \end{block}

\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Resources for Building \R Packages}
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
\frametitle{Discussion $+$ Future Work}
\end{frame}


\end{document}

